{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Jweet.js","components/JweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Container","styled","div","Form","form","Input","input","Submit","SignOrCreate","span","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Logo","Buttons","Button","button","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","size","faGoogle","faGithub","Text","Date","Image","img","ButtonList","TextArea","textarea","UpdateLabel","label","CancelButton","Jweet","jweetObj","isOwner","editing","setEditing","text","newJweet","setNewJweet","toggleEditing","doc","id","update","htmlFor","faPaperPlane","faBan","faPencilAlt","window","confirm","delete","refFromURL","attachmentUrl","faTrashAlt","creatorName","createdAt","substring","src","InputText","Tab","TextTab","Clear","AttachLabel","SubmitLabel","JweetFactory","userObj","jweet","setJweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","now","creatorId","displayName","collection","add","max","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","Home","jweets","setJweets","useEffect","orderBy","onSnapshot","snapshot","jweetArray","docs","map","List","ul","Item","li","Profile","refreshUser","newDisplayName","setNewDisplayName","jweetList","setJweetList","history","useHistory","updateProfile","alert","getMyJweets","where","get","signOut","push","length","index","nav","SLink","Link","IconText","Navigation","to","faHouseUser","faUser","AppRouter","isLoggedIn","exact","path","GlobalStyles","createGlobalStyle","reset","Footer","footer","Loader","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","args","spin","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bff54bbc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 320px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  background-color: rgb(255, 255, 255);\n  width: 100%;\n  padding: 5px 10px;\n  margin-bottom: 5px;\n  border-radius: 20px;\n  box-sizing: border-box;\n  cursor: text;\n  color: rgb(20, 20, 20);\n  &::placeholder {\n    color: rgb(100, 100, 100);\n  }\n  &::-webkit-input-placeholder {\n    color: rgb(100, 100, 100);\n  }\n`;\n\nconst Submit = styled.input`\n  width: 100%;\n  padding: 10px 0px;\n  border-radius: 20px;\n  margin-top: 10px;\n  box-sizing: border-box;\n  background-color: #289ae2;\n  display: flex;\n  justify-content: center;\n`;\n\nconst SignOrCreate = styled.span`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  color: #289ae2;\n  text-decoration: underline;\n`;\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <Container>\n      <Form onSubmit={onSubmit}>\n        <Input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={onChange}\n          required\n        />\n        <Input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={onChange}\n          required\n        />\n        <Submit\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error}\n      </Form>\n      <SignOrCreate onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </SignOrCreate>\n    </Container>\n  );\n};\n\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst Logo = styled.div`\n  color: #289ae2;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 50px;\n  font-size: 30px;\n`;\nconst Buttons = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 40px;\n`;\nconst Button = styled.button`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 75%;\n  padding: 5px 0px;\n  border-radius: 20px;\n  color: rgb(20, 20, 20);\n  background: rgb(220, 220, 220);\n  margin-bottom: 15px;\n`;\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <Container>\n      <Logo>\n        <FontAwesomeIcon icon={faTwitter} size=\"4x\" />\n      </Logo>\n      <AuthForm />\n      <Buttons>\n        <Button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n          <FontAwesomeIcon icon={faGoogle} size=\"2x\" />\n        </Button>\n        <Button onClick={onSocialClick} name=\"github\">\n          Continue with Github\n          <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n        </Button>\n      </Buttons>\n    </Container>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  border: 1px solid rgb(255, 255, 255);\n  margin-bottom: 20px;\n  border-radius: 15px;\n  padding: 5px;\n`;\nconst Text = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  height: 100%;\n  word-break: break-all;\n  padding: 10px 5px;\n`;\nconst Date = styled.div`\n  width: 100%;\n  padding: 0px 5px;\n  padding-bottom: 10px;\n  color: rgb(100, 100, 100);\n`;\nconst Image = styled.img`\n  width: 50px;\n  height: 50px;\n  position: absolute;\n  bottom: -10px;\n  right: 0px;\n  border-radius: 25px;\n`;\nconst ButtonList = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Button = styled.button`\n  padding: 10px;\n  padding-top: 0px;\n  color: #289ae2;\n`;\nconst Form = styled.form`\n  width: 100%;\n  word-break: break-all;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst TextArea = styled.textarea`\n  all: unset;\n  width: 100%;\n  cursor: text;\n  padding: 10px 5px;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\nconst Input = styled.input`\n  display: none;\n`;\nconst UpdateLabel = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 10px;\n  border-radius: 20px;\n  margin: 5px;\n  background-color: #289ae2;\n`;\nconst CancelButton = styled.button`\n  padding: 10px;\n  border-radius: 20px;\n  margin: 5px;\n  background-color: #289ae2;\n`;\n\nconst Jweet = ({ jweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newJweet, setNewJweet] = useState(jweetObj.text);\n  const onDeleteClick = () => {\n    const ok = window.confirm(\"Are you sure you want to delete this Jweet ? \");\n    if (ok) {\n      dbService.doc(`jweets/${jweetObj.id}`).delete();\n      storageService.refFromURL(jweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = (event) => {\n    event.preventDefault();\n    dbService.doc(`jweets/${jweetObj.id}`).update({\n      text: newJweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewJweet(value);\n  };\n  return (\n    <>\n      {editing ? (\n        <Container>\n          <Form onSubmit={onSubmit}>\n            <TextArea\n              placeholder=\"Edit your Jweet\"\n              required\n              onChange={onChange}\n              value={newJweet}\n            />\n            <ButtonList>\n              <UpdateLabel htmlFor=\"update\">\n                <FontAwesomeIcon icon={faPaperPlane} />\n              </UpdateLabel>\n              <Input id=\"update\" type=\"submit\" />\n              <CancelButton onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faBan} />\n              </CancelButton>\n            </ButtonList>\n          </Form>\n        </Container>\n      ) : (\n        <Container>\n          <Text>\n            {jweetObj.text}\n            {isOwner && (\n              <ButtonList>\n                <Button onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </Button>\n                <Button onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </Button>\n              </ButtonList>\n            )}\n          </Text>\n          <Date>\n            By {jweetObj.creatorName} at{\" \"}\n            {window.Date(jweetObj.createdAt).substring(0, 21)}\n          </Date>\n\n          {jweetObj.attachmentUrl && <Image src={jweetObj.attachmentUrl} />}\n        </Container>\n      )}\n    </>\n  );\n};\nexport default Jweet;\n","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  /* border: 1px solid rgb(255, 255, 255); */\n  border-radius: 20px;\n`;\nconst Input = styled.input`\n  display: none;\n`;\nconst InputText = styled.input`\n  width: 100%;\n  font-size: 15px;\n  cursor: text;\n  &::placeholder {\n    font-size: 15px;\n  }\n`;\nconst Tab = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px 0px;\n`;\nconst TextTab = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px 0px;\n  padding: 5px;\n  border: 1px solid #289ae2;\n  border-radius: 20px;\n`;\nconst Clear = styled.button`\n  padding: 10px;\n  font-size: 16px;\n  color: #289ae2;\n`;\nconst Image = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n`;\nconst AttachLabel = styled.label`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  color: #289ae2;\n  padding: 5px 0px;\n`;\nconst SubmitLabel = styled.label`\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  background-color: #289ae2;\n  border-radius: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst JweetFactory = ({ userObj }) => {\n  const [jweet, setJweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (jweet === \"\") {\n      return;\n    }\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const jweetObj = {\n      text: jweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      creatorName: userObj.displayName,\n      attachmentUrl,\n    };\n    await dbService.collection(\"jweets\").add(jweetObj);\n    setJweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setJweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    if (Boolean(theFile)) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n  const onClearAttachment = () => {\n    setAttachment(null);\n  };\n  return (\n    <Form onSubmit={onSubmit}>\n      <TextTab>\n        <InputText\n          onChange={onChange}\n          value={jweet}\n          type=\"text\"\n          placeholder=\"What do you think now?\"\n          max={120}\n        />\n        <SubmitLabel htmlFor=\"submit\">\n          <FontAwesomeIcon icon={faPaperPlane} />\n        </SubmitLabel>\n        <Input id=\"submit\" type=\"submit\" value=\"Jweet\" />\n      </TextTab>\n      <AttachLabel htmlFor=\"attach-file\">\n        <FontAwesomeIcon icon={faPlus} />\n        <span>Add Photo </span>\n      </AttachLabel>\n      <Input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n      />\n      {attachment && (\n        <Tab>\n          <Image src={attachment} />\n          <Clear onClick={onClearAttachment}>\n            <FontAwesomeIcon icon={faTrashAlt} size=\"1x\" />\n          </Clear>\n        </Tab>\n      )}\n    </Form>\n  );\n};\nexport default JweetFactory;\n","import { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Jweet from \"components/Jweet\";\nimport JweetFactory from \"components/JweetFactory\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-top: 20px;\n  height: 100%;\n`;\n\nconst Home = ({ userObj }) => {\n  const [jweets, setJweets] = useState([]);\n\n  /* method I - No Real Time\n  const getJweets = async () => {\n    const dbJweets = await dbService.collection(\"jweets\").get();\n    dbJweets.forEach((document) => {\n      const jweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      setJweets((prev) => [jweetObject, ...prev]);\n    });\n  };\n  */\n\n  useEffect(() => {\n    //method II - Real time update page\n    dbService\n      .collection(\"jweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const jweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setJweets(jweetArray);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <JweetFactory userObj={userObj} />\n      {jweets.map((jweet) => (\n        <Jweet\n          key={jweet.id}\n          jweetObj={jweet}\n          isOwner={jweet.creatorId === userObj.uid}\n        />\n      ))}\n    </Container>\n  );\n};\nexport default Home;\n","import { useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100%;\n`;\nconst Form = styled.form`\n  border: 1px solid rgb(255, 255, 255);\n  padding: 10px 5px;\n  border-radius: 20px;\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst InputText = styled.input`\n  width: 105px;\n  cursor: text;\n  color: rgb(100, 100, 100);\n  padding: 10px;\n  font-size: 16px;\n`;\nconst Submit = styled.input`\n  border-radius: 20px;\n  background-color: #289ae2;\n  text-align: center;\n  padding: 10px;\n  margin-right: 10px;\n`;\nconst Button = styled.button`\n  padding: 10px;\n  border-radius: 20px;\n  background-color: tomato;\n  text-align: center;\n  padding: 10px;\n`;\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 20px;\n`;\nconst Item = styled.li`\n  border: 1px solid rgb(255, 255, 255);\n  padding: 10px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n`;\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [jweetList, setJweetList] = useState(\"\");\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      alert(`Your name has been changed to ${newDisplayName} :)`);\n      refreshUser();\n    }\n  };\n\n  const getMyJweets = async () => {\n    const jweets = await dbService\n      .collection(\"jweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .get();\n    setJweetList(jweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyJweets();\n  }, []);\n  return (\n    <Container>\n      <Form onSubmit={onSubmit}>\n        <InputText\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={onChange}\n        />\n        <Submit type=\"submit\" value=\"Update Profile\" />\n        <Button onClick={onLogOutClick}>Log Out</Button>\n      </Form>\n      <List>\n        {jweetList &&\n          jweetList.length > 0 &&\n          jweetList.map((jweet, index) => (\n            <Item key={index}>{jweet.text}</Item>\n          ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\nimport { faHouseUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Container = styled.nav``;\nconst List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst Item = styled.li`\n  font-size: 16px;\n  &:hover {\n    color: #289ae2;\n  }\n`;\nconst SLink = styled(Link)`\n  width: 90px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  font-size: 12px;\n`;\nconst IconText = styled.span`\n  font-size: 16px;\n  margin-left: 10px;\n`;\n\nconst Navigation = ({ userObj }) => (\n  <Container>\n    <List>\n      <Item>\n        <Link to=\"/\">\n          <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n        </Link>\n      </Item>\n      <Item>\n        <SLink to=\"/\">\n          <FontAwesomeIcon icon={faHouseUser} size=\"2x\" />\n          <IconText>Home</IconText>\n        </SLink>\n      </Item>\n      <Item>\n        <SLink to=\"/profile\">\n          <FontAwesomeIcon icon={faUser} size=\"2x\" />\n          <IconText>\n            {userObj.displayName && userObj.displayName.length > 10\n              ? `${userObj.displayName.substring(0, 7)}...`\n              : userObj.displayName}\n          </IconText>\n        </SLink>\n      </Item>\n    </List>\n  </Container>\n);\nexport default Navigation;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n\n    ${reset}\n    input, button, span{\n        all:unset;\n        cursor:pointer;\n        &::-webkit-file-upload-button {\n            all: unset;\n            width: 50px;\n            padding: 10px;\n            text-align: center;\n            color: rgb(255, 255, 255);\n            background-color: #289ae2;\n            border-radius: 20px;\n            margin-right:10px;\n        }\n    }\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        width:100%;\n        height:100vh;\n        color:rgb(250,250,250);\n        background-color:rgb(0,0,0);\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        font-weight:600;\n        display:flex;\n        justify-content:center;\n        align-items:center;\n    }\n    \n    #root{\n        padding:20px 0px;\n        width:320px;\n        height:100%;\n        overflow-y:scroll;\n        &::-webkit-scrollbar{\n            display:none;\n        }\n        display:flex;\n        \n    }\n\n`;\n\nexport default GlobalStyles;\n","import { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport styled from \"styled-components\";\nimport GlobalStyles from \"components/GlobalStyles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 320px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 30px;\n`;\nconst Loader = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 200px 0px;\n  color: #289ae2;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  });\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      <Container>\n        {init ? (\n          <AppRouter\n            isLoggedIn={Boolean(userObj)}\n            userObj={userObj}\n            refreshUser={refreshUser}\n          />\n        ) : (\n          <Loader>\n            <FontAwesomeIcon icon={faTwitter} spin={true} size=\"4x\" />\n          </Loader>\n        )}\n        <Footer>&copy; {new Date().getFullYear()} Jweeter</Footer>\n      </Container>\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}